---
- name: Provision the server for syncing MECA archives
  hosts: mecadoi
  remote_user: root

  vars:
    sync_user: mecadoi
    sync_user_home_dir: '/home/{{ sync_user }}'
    sync_dir: '{{ sync_user_home_dir }}/storage-box-local'
    scripts_dir: '{{ sync_user_home_dir }}/bin'
    code_dir: '{{ sync_user_home_dir }}/mecadoi'
    batch_dir: '{{ sync_user_home_dir }}/batch'
    logs_dir: '{{ sync_user_home_dir }}/logs'
    s3_bucket_name: mecadoi-archives

  tasks:
  - name: Update system
    package:
      name: '*'
      update_cache: yes
      state: latest
    register: system_updated

  - name: Reboot
    reboot:
    when: system_updated is changed

  - name: Install essential packages
    apt:
      pkg:
      - acl
      - awscli
      - curl
      - htop
      - make
      - python3
      - python3-pip
      - python3-venv
      - unzip
      - vim
      - wget

  - name: Create the mecadoi user
    ansible.builtin.user:
      name: '{{ sync_user }}'
      shell: /bin/bash
      generate_ssh_key: true
      ssh_key_comment: For FTP access to the MECA storage box
      ssh_key_file: .ssh/id_storage_box

  - name: Set up ssh config for access to the server from the outside and to the storage box from the server
    ansible.builtin.copy:
      src: resources/.ssh
      dest: '{{ sync_user_home_dir }}/.ssh'
      owner: '{{ sync_user }}'
      group: '{{ sync_user }}'

  - name: Fetch the public part of the keypair we just created
    fetch: 
      src: '{{ sync_user_home_dir }}/.ssh/id_storage_box.pub'
      dest: buffer/id_storage_box.pub
      flat: yes
    register: storage_box_key

  - name: Merge the base authorized keys and the server's new public key to create the storage box' authorized keys file
    when: storage_box_key is changed
    local_action: shell paste -d '\n' -s resources/authorized_keys buffer/id_storage_box.pub > buffer/authorized_keys_storage_box

  - name: Upload the storage box' authorized keys file
    when: storage_box_key is changed
    local_action: ansible.builtin.command scp buffer/authorized_keys_storage_box mecadoi-ftp:.ssh/authorized_keys

  - name: Create the local directories needed for sync
    ansible.builtin.file:
      path: '{{ item }}'
      state: directory
      owner: '{{ sync_user }}'
      group: '{{ sync_user }}'
    loop:
      - '{{ scripts_dir }}'
      - '{{ sync_dir }}'
      - '{{ logs_dir }}'
      - '{{ batch_dir }}'

  - name: Copy the templated wrapper script to the server
    template: 
      src: 'resources/scripts/mecadoi.sh'
      dest: '{{ scripts_dir }}/mecadoi.sh'
      owner: '{{ sync_user }}'
      group: '{{ sync_user }}'
      mode: u=rx,g=rx,o=r

  - name: Copy the Python files to the server
    ansible.posix.synchronize:
      src: ../src
      dest: '{{ code_dir }}/'
      # Delete files in dest that do not exist (after transfer, not before) in the src path
      delete: yes
      rsync_opts:
        - "--exclude={'__pycache__','.DS_Store'}"

  - name: Recursively change ownership of the Python files
    ansible.builtin.file:
      path: '{{ code_dir }}/'
      state: directory
      recurse: yes
      owner: '{{ sync_user }}'
      group: '{{ sync_user }}'

  - name: Copy the requirements files to the server
    ansible.builtin.copy:
      src: ../requirements
      dest: '{{ code_dir }}/'
      owner: '{{ sync_user }}'
      group: '{{ sync_user }}'
      mode: u=rwx,g=r,o=r

  - name: Install specified python requirements in indicated (virtualenv)
    ansible.builtin.pip:
      requirements: '{{ code_dir }}/requirements/base.txt'
      virtualenv: '{{ code_dir }}/.venv'
      virtualenv_command: /usr/bin/python3.9 -m venv

  - name: Set up cron job for syncing the storage box
    become: yes
    become_user: '{{ sync_user }}'
    ansible.builtin.cron:
      name: Sync MECA archives from the storage box to a local directory and an S3 bucket
      minute: 3
      job: '{{ scripts_dir }}/mecadoi.sh sync | tee -a "{{ logs_dir }}/sync-storage-box.log"'

  - name: Set up cron job for parsing new MECA archives
    become: yes
    become_user: '{{ sync_user }}'
    ansible.builtin.cron:
      name: Parse new MECA archives
      # weekly on Sunday morning
      minute: 46
      hour: 5
      weekday: 1
      job: '{{ scripts_dir }}/mecadoi.sh parse | tee -a "{{ logs_dir }}/batch.log"'
